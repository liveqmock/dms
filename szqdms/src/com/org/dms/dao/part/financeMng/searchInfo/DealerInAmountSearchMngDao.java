package com.org.dms.dao.part.financeMng.searchInfo;

import com.org.framework.base.BaseDAO;
import com.org.framework.common.BaseResultSet;
import com.org.framework.common.PageManager;
import com.org.framework.common.QuerySet;
import com.org.framework.common.User;
import com.org.mvc.context.ActionContext;

public class DealerInAmountSearchMngDao extends BaseDAO{
	public  static final DealerInAmountSearchMngDao getInstance(ActionContext atx)
    {
		DealerInAmountSearchMngDao dao = new DealerInAmountSearchMngDao();
        atx.setDBFactory(dao.factory);
        return dao;
    }
	
	public BaseResultSet inAmountSearch(PageManager page, User user,String jd,String beginDate,String endDate, String conditions) throws Exception
    {
    	BaseResultSet bs = null;
    	StringBuffer sql= new StringBuffer();
    	sql.append("SELECT A.ONAME, A.CODE, B.*,"+jd+" AS JD,\n" );
    	sql.append("       NVL(B.ALCGJE, 0) + NVL(B.BLCGJE, 0) + NVL(B.CLCGJE, 0) + NVL(B.CLCGJE, 0) + NVL(B.DLCGJE, 0) + NVL(B.YPCGJE, 0) + NVL(B.NFCGJE, 0) ZCGJE\n" );
    	sql.append("  FROM TM_ORG A,\n" );
    	sql.append("       ( --服务站时间段入库金额查询\n" );
    	sql.append("        SELECT T.ORG_CODE, --服务站代码\n" );
    	sql.append("                SUM(CASE\n" );
    	sql.append("                      WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'A' THEN\n" );
    	sql.append("                       T1.DELIVERY_COUNT * T1.UNIT_PRICE\n" );
    	sql.append("                      ELSE\n" );
    	sql.append("                       0\n" );
    	sql.append("                    END) ALCGJE, --A类配件入库金额\n" );
    	sql.append("                SUM(CASE\n" );
    	sql.append("                      WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'B' THEN\n" );
    	sql.append("                       T1.DELIVERY_COUNT * T1.UNIT_PRICE\n" );
    	sql.append("                      ELSE\n" );
    	sql.append("                       0\n" );
    	sql.append("                    END) BLCGJE, --B类配件入库金额\n" );
    	sql.append("                SUM(CASE\n" );
    	sql.append("                      WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'C' THEN\n" );
    	sql.append("                       T1.DELIVERY_COUNT * T1.UNIT_PRICE\n" );
    	sql.append("                      ELSE\n" );
    	sql.append("                       0\n" );
    	sql.append("                    END) CLCGJE, --C类配件入库金额\n" );
    	sql.append("                SUM(CASE\n" );
    	sql.append("                      WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'D' THEN\n" );
    	sql.append("                       T1.DELIVERY_COUNT * T1.UNIT_PRICE\n" );
    	sql.append("                      ELSE\n" );
    	sql.append("                       0\n" );
    	sql.append("                    END) DLCGJE, --D类配件入库金额\n" );
    	sql.append("                SUM(CASE\n" );
    	sql.append("                      WHEN T3.IF_OIL = '100101' THEN\n" );
    	sql.append("                       T1.DELIVERY_COUNT * T1.UNIT_PRICE\n" );
    	sql.append("                      ELSE\n" );
    	sql.append("                       0\n" );
    	sql.append("                    END) YPCGJE, --油品入库金额\n" );
    	sql.append("                SUM(CASE\n" );
    	sql.append("                      WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE IN ('F', 'L') THEN\n" );
    	sql.append("                       T1.DELIVERY_COUNT * T1.UNIT_PRICE\n" );
    	sql.append("                      ELSE\n" );
    	sql.append("                       0\n" );
    	sql.append("                    END) NFCGJE --尿素与防冻液入库金额\n" );
//    	sql.append("                    END) NFCGJE, --尿素与防冻液入库金额\n" );
//    	sql.append("                SUM(T1.DELIVERY_COUNT * T1.UNIT_PRICE) ZCGJE --总采购金额\n" );
    	sql.append("          FROM PT_BU_SALE_ORDER     T,\n" );
    	sql.append("                PT_BU_SALE_ORDER_DTL T1,\n" );
    	sql.append("                TM_ORG               T2,\n" );
    	sql.append("                PT_BA_INFO           T3\n" );
    	sql.append("         WHERE T.ORDER_ID = T1.ORDER_ID\n" );
    	sql.append("           AND T.ORG_CODE = T2.CODE\n" );
    	sql.append("           AND T1.PART_ID = T3.PART_ID\n" );
    	sql.append("           AND T.IF_CHANEL_ORDER = 100101\n" );
    	sql.append("           AND T.ORDER_STATUS = 202206\n" );
    	sql.append("           AND T.SHIP_STATUS = 204807\n" );
    	sql.append("           AND TO_CHAR(T.CLOSE_DATE, 'YYYY-MM-DD') >= '"+beginDate+"'\n" );
    	sql.append("           AND TO_CHAR(T.CLOSE_DATE, 'YYYY-MM-DD') <= '"+endDate+"'\n" );
    	sql.append("           AND T2.ORG_TYPE IN (200006, 200007)\n" );
    	sql.append("         GROUP BY T.ORG_CODE --销售订单入库金额\n" );
    	sql.append("        ) B\n" );
    	sql.append(" WHERE A.CODE = B.ORG_CODE\n" );
    	sql.append("   AND A.ORG_TYPE IN (200006, 200007) AND "+conditions+"");
    	bs = factory.select(sql.toString(), page);
    	return bs;
    }
	
	public QuerySet download(String jd,String beginDate,String endDate) throws Exception{
		StringBuffer sql= new StringBuffer();
		sql.append("SELECT A.ONAME, A.CODE, B.*,"+jd+" AS JD,\n" );
    	sql.append("       NVL(B.ALCGJE, 0) + NVL(B.BLCGJE, 0) + NVL(B.CLCGJE, 0) + NVL(B.CLCGJE, 0) + NVL(B.DLCGJE, 0) + NVL(B.YPCGJE, 0) + NVL(B.NFCGJE, 0) ZCGJE\n" );
    	sql.append("  FROM TM_ORG A,\n" );
    	sql.append("       ( --服务站时间段入库金额查询\n" );
    	sql.append("        SELECT T.ORG_CODE, --服务站代码\n" );
    	sql.append("                SUM(CASE\n" );
    	sql.append("                      WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'A' THEN\n" );
    	sql.append("                       T1.DELIVERY_COUNT * T1.UNIT_PRICE\n" );
    	sql.append("                      ELSE\n" );
    	sql.append("                       0\n" );
    	sql.append("                    END) ALCGJE, --A类配件入库金额\n" );
    	sql.append("                SUM(CASE\n" );
    	sql.append("                      WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'B' THEN\n" );
    	sql.append("                       T1.DELIVERY_COUNT * T1.UNIT_PRICE\n" );
    	sql.append("                      ELSE\n" );
    	sql.append("                       0\n" );
    	sql.append("                    END) BLCGJE, --B类配件入库金额\n" );
    	sql.append("                SUM(CASE\n" );
    	sql.append("                      WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'C' THEN\n" );
    	sql.append("                       T1.DELIVERY_COUNT * T1.UNIT_PRICE\n" );
    	sql.append("                      ELSE\n" );
    	sql.append("                       0\n" );
    	sql.append("                    END) CLCGJE, --C类配件入库金额\n" );
    	sql.append("                SUM(CASE\n" );
    	sql.append("                      WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'D' THEN\n" );
    	sql.append("                       T1.DELIVERY_COUNT * T1.UNIT_PRICE\n" );
    	sql.append("                      ELSE\n" );
    	sql.append("                       0\n" );
    	sql.append("                    END) DLCGJE, --D类配件入库金额\n" );
    	sql.append("                SUM(CASE\n" );
    	sql.append("                      WHEN T3.IF_OIL = '100101' THEN\n" );
    	sql.append("                       T1.DELIVERY_COUNT * T1.UNIT_PRICE\n" );
    	sql.append("                      ELSE\n" );
    	sql.append("                       0\n" );
    	sql.append("                    END) YPCGJE, --油品入库金额\n" );
    	sql.append("                SUM(CASE\n" );
    	sql.append("                      WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE IN ('F', 'L') THEN\n" );
    	sql.append("                       T1.DELIVERY_COUNT * T1.UNIT_PRICE\n" );
    	sql.append("                      ELSE\n" );
    	sql.append("                       0\n" );
    	sql.append("                    END) NFCGJE, --尿素与防冻液入库金额\n" );
    	sql.append("                SUM(T1.DELIVERY_COUNT * T1.UNIT_PRICE) ZCGJE --总采购金额\n" );
    	sql.append("          FROM PT_BU_SALE_ORDER     T,\n" );
    	sql.append("                PT_BU_SALE_ORDER_DTL T1,\n" );
    	sql.append("                TM_ORG               T2,\n" );
    	sql.append("                PT_BA_INFO           T3\n" );
    	sql.append("         WHERE T.ORDER_ID = T1.ORDER_ID\n" );
    	sql.append("           AND T.ORG_CODE = T2.CODE\n" );
    	sql.append("           AND T1.PART_ID = T3.PART_ID\n" );
    	sql.append("           AND T.IF_CHANEL_ORDER = 100101\n" );
    	sql.append("           AND T.ORDER_STATUS = 202206\n" );
    	sql.append("           AND T.SHIP_STATUS = 204807\n" );
    	sql.append("           AND TO_CHAR(T.CLOSE_DATE, 'YYYY-MM-DD') >= '"+beginDate+"'\n" );
    	sql.append("           AND TO_CHAR(T.CLOSE_DATE, 'YYYY-MM-DD') <= '"+endDate+"'\n" );
    	sql.append("           AND T2.ORG_TYPE IN (200006, 200007)\n" );
    	sql.append("         GROUP BY T.ORG_CODE --销售订单入库金额\n" );
    	sql.append("        ) B\n" );
    	sql.append(" WHERE A.CODE = B.ORG_CODE\n" );
    	sql.append("   AND A.ORG_TYPE IN (200006, 200007) ");
    	return factory.select(null, sql.toString());
    }
	
	public BaseResultSet outAmountSearch(PageManager page, User user,String jd,String beginDate,String endDate, String conditions) throws Exception
    {
    	BaseResultSet bs = null;
    	StringBuffer sql= new StringBuffer();
    	sql.append("SELECT C.CODE,\n" );
    	sql.append("       C.ONAME,\n" );
    	sql.append("       '"+jd+"' AS JD,\n" );
    	sql.append("       NVL(A.BWWXJE, 0)  BWWXJE,\n" );
    	sql.append("       NVL(A.ALCGJE, 0) + NVL(B.ALCGJE1, 0) ALCGJE,\n" );
    	sql.append("       NVL(A.BLCGJE, 0) + NVL(B.BLCGJE1, 0) BLCGJE,\n" );
    	sql.append("       NVL(A.CLCGJE, 0) + NVL(B.CLCGJE1, 0) CLCGJE,\n" );
    	sql.append("       NVL(A.DLCGJE, 0) + NVL(B.DLCGJE1, 0) DLCGJE,\n" );
    	sql.append("       NVL(A.YPCGJE, 0) + NVL(B.YPCGJE1, 0) YPCGJE,\n" );
    	sql.append("       NVL(A.NFCGJE, 0) + NVL(B.NFCGJE1, 0) NFCGJE,\n" );
//    	sql.append("       NVL(A.ZCGJE, 0) + NVL(B.ZCGJE1, 0) ZCGJE\n" );
    	sql.append("       NVL(A.BWWXJE, 0) + NVL(A.ALCGJE, 0) + NVL(B.ALCGJE1, 0) + NVL(A.BLCGJE, 0) + NVL(B.BLCGJE1, 0) + NVL(A.CLCGJE, 0) + NVL(B.CLCGJE1, 0) + NVL(A.CLCGJE, 0) + NVL(B.CLCGJE1, 0) + NVL(A.DLCGJE, 0) + NVL(B.DLCGJE1, 0) + NVL(A.YPCGJE, 0) + NVL(B.YPCGJE1, 0) + NVL(A.NFCGJE, 0) + NVL(B.NFCGJE1, 0) ZCGJE\n" );
    	sql.append("  FROM (SELECT T.CREATE_USER ORG_CODE, --服务站代码\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.IF_OUT = '100101' AND T.OUT_TYPE='307602' THEN\n" );
    	sql.append("                      T1.SALE_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) BWWXJE, --保外维修金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'A' THEN\n" );
    	sql.append("                      T1.SALE_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) ALCGJE, --A类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'B' THEN\n" );
    	sql.append("                      T1.SALE_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) BLCGJE, --B类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'C' THEN\n" );
    	sql.append("                      T1.SALE_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) CLCGJE, --C类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'D' THEN\n" );
    	sql.append("                      T1.SALE_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) DLCGJE, --D类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100101' THEN\n" );
    	sql.append("                      T1.SALE_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) YPCGJE, --油品出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE IN ('F', 'L') THEN\n" );
    	sql.append("                      T1.SALE_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) NFCGJE, --尿素与防冻液出库金额\n" );
    	sql.append("               SUM(T1.SALE_COUNT * T1.SALE_PRICE) ZCGJE --总采购金额\n" );
    	sql.append("          FROM PT_BU_REAL_SALE     T,\n" );
    	sql.append("               PT_BU_REAL_SALE_DTL T1,\n" );
    	sql.append("               TM_ORG              T2,\n" );
    	sql.append("               PT_BA_INFO          T3\n" );
    	sql.append("         WHERE T.SALE_ID = T1.SALE_ID\n" );
    	sql.append("           AND T.CREATE_USER = T2.CODE\n" );
    	sql.append("           AND T1.PART_ID = T3.PART_ID\n" );
    	sql.append("           AND T.SALE_STATUS = 205002\n" );
    	sql.append("           AND T2.ORG_TYPE IN (200006, 200007)\n" );
    	sql.append("           AND TO_CHAR(T.SALE_DATE, 'YYYY-MM-DD') >= '"+beginDate+"'\n" );
    	sql.append("           AND TO_CHAR(T.SALE_DATE, 'YYYY-MM-DD') <= '"+endDate+"'\n" );
    	sql.append("         GROUP BY T.CREATE_USER) A,\n" );
    	sql.append("       (SELECT T.APPLY_ORG_CODE ORG_CODE, --服务站代码\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'A' THEN\n" );
    	sql.append("                      T1.RETURN_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) ALCGJE1, --A类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'B' THEN\n" );
    	sql.append("                      T1.RETURN_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) BLCGJE1, --B类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'C' THEN\n" );
    	sql.append("                      T1.RETURN_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) CLCGJE1, --C类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'D' THEN\n" );
    	sql.append("                      T1.RETURN_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) DLCGJE1, --D类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100101' THEN\n" );
    	sql.append("                      T1.RETURN_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) YPCGJE1, --油品出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE IN ('F', 'L') THEN\n" );
    	sql.append("                      T1.RETURN_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) NFCGJE1, --尿素与防冻液出库金额\n" );
    	sql.append("               SUM(T1.RETURN_COUNT * T1.SALE_PRICE) ZCGJE1 --总采购金额\n" );
    	sql.append("          FROM PT_BU_RETURN_APPLY     T,\n" );
    	sql.append("               PT_BU_RETURN_APPLY_DTL T1,\n" );
    	sql.append("               TM_ORG                 T2,\n" );
    	sql.append("               PT_BA_INFO             T3\n" );
    	sql.append("         WHERE T.RETURN_ID = T1.RETURN_ID\n" );
    	sql.append("           AND T.APPLY_ORG_CODE = T2.CODE\n" );
    	sql.append("           AND T1.PART_ID = T3.PART_ID\n" );
    	sql.append("           AND T.APPLY_SATUS = 202405\n" );
    	sql.append("           AND T2.ORG_TYPE IN (200006, 200007)\n" );
    	sql.append("           AND TO_CHAR(T.IN_STOCK_DATE, 'YYYY-MM-DD') >= '"+beginDate+"'\n" );
    	sql.append("           AND TO_CHAR(T.IN_STOCK_DATE, 'YYYY-MM-DD') <= '"+endDate+"'\n" );
    	sql.append("         GROUP BY T.APPLY_ORG_CODE) B,\n" );
    	sql.append("       TM_ORG C\n" );
    	sql.append(" WHERE A.ORG_CODE = B.ORG_CODE(+)\n" );
    	sql.append("   AND A.ORG_CODE = C.CODE");
    	bs = factory.select(sql.toString(), page);
    	return bs;
    }
	public QuerySet outDownload(String jd,String beginDate,String endDate) throws Exception{
		StringBuffer sql= new StringBuffer();
    	sql.append("SELECT C.CODE,\n" );
    	sql.append("       C.ONAME,\n" );
    	sql.append("       '"+jd+"' AS JD,\n" );
    	sql.append("       NVL(A.BWWXJE, 0)  BWWXJE,\n" );
    	sql.append("       NVL(A.ALCGJE, 0) + NVL(B.ALCGJE1, 0) ALCGJE,\n" );
    	sql.append("       NVL(A.BLCGJE, 0) + NVL(B.BLCGJE1, 0) BLCGJE,\n" );
    	sql.append("       NVL(A.CLCGJE, 0) + NVL(B.CLCGJE1, 0) CLCGJE,\n" );
    	sql.append("       NVL(A.DLCGJE, 0) + NVL(B.DLCGJE1, 0) DLCGJE,\n" );
    	sql.append("       NVL(A.YPCGJE, 0) + NVL(B.YPCGJE1, 0) YPCGJE,\n" );
    	sql.append("       NVL(A.NFCGJE, 0) + NVL(B.NFCGJE1, 0) NFCGJE,\n" );
//    	sql.append("       NVL(A.ZCGJE, 0) + NVL(B.ZCGJE1, 0) ZCGJE\n" );
    	sql.append("       NVL(A.BWWXJE, 0) + NVL(A.ALCGJE, 0) + NVL(B.ALCGJE1, 0) + NVL(A.BLCGJE, 0) + NVL(B.BLCGJE1, 0) + NVL(A.CLCGJE, 0) + NVL(B.CLCGJE1, 0) + NVL(A.CLCGJE, 0) + NVL(B.CLCGJE1, 0) + NVL(A.DLCGJE, 0) + NVL(B.DLCGJE1, 0) + NVL(A.YPCGJE, 0) + NVL(B.YPCGJE1, 0) + NVL(A.NFCGJE, 0) + NVL(B.NFCGJE1, 0) ZCGJE\n" );
    	sql.append("  FROM (SELECT T.CREATE_USER ORG_CODE, --服务站代码\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.IF_OUT = '100101' AND T.OUT_TYPE='307602' THEN\n" );
    	sql.append("                      T1.SALE_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) BWWXJE, --保外维修金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'A' THEN\n" );
    	sql.append("                      T1.SALE_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) ALCGJE, --A类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'B' THEN\n" );
    	sql.append("                      T1.SALE_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) BLCGJE, --B类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'C' THEN\n" );
    	sql.append("                      T1.SALE_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) CLCGJE, --C类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'D' THEN\n" );
    	sql.append("                      T1.SALE_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) DLCGJE, --D类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100101' THEN\n" );
    	sql.append("                      T1.SALE_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) YPCGJE, --油品出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE IN ('F', 'L') THEN\n" );
    	sql.append("                      T1.SALE_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) NFCGJE, --尿素与防冻液出库金额\n" );
    	sql.append("               SUM(T1.SALE_COUNT * T1.SALE_PRICE) ZCGJE --总采购金额\n" );
    	sql.append("          FROM PT_BU_REAL_SALE     T,\n" );
    	sql.append("               PT_BU_REAL_SALE_DTL T1,\n" );
    	sql.append("               TM_ORG              T2,\n" );
    	sql.append("               PT_BA_INFO          T3\n" );
    	sql.append("         WHERE T.SALE_ID = T1.SALE_ID\n" );
    	sql.append("           AND T.CREATE_USER = T2.CODE\n" );
    	sql.append("           AND T1.PART_ID = T3.PART_ID\n" );
    	sql.append("           AND T.SALE_STATUS = 205002\n" );
    	sql.append("           AND T2.ORG_TYPE IN (200006, 200007)\n" );
    	sql.append("           AND TO_CHAR(T.SALE_DATE, 'YYYY-MM-DD') >= '"+beginDate+"'\n" );
    	sql.append("           AND TO_CHAR(T.SALE_DATE, 'YYYY-MM-DD') <= '"+endDate+"'\n" );
    	sql.append("         GROUP BY T.CREATE_USER) A,\n" );
    	sql.append("       (SELECT T.APPLY_ORG_CODE ORG_CODE, --服务站代码\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'A' THEN\n" );
    	sql.append("                      T1.RETURN_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) ALCGJE1, --A类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'B' THEN\n" );
    	sql.append("                      T1.RETURN_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) BLCGJE1, --B类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'C' THEN\n" );
    	sql.append("                      T1.RETURN_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) CLCGJE1, --C类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE = 'D' THEN\n" );
    	sql.append("                      T1.RETURN_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) DLCGJE1, --D类配件出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100101' THEN\n" );
    	sql.append("                      T1.RETURN_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) YPCGJE1, --油品出库金额\n" );
    	sql.append("               SUM(CASE\n" );
    	sql.append("                     WHEN T3.IF_OIL = '100102' AND T3.REBATE_TYPE IN ('F', 'L') THEN\n" );
    	sql.append("                      T1.RETURN_COUNT * T1.SALE_PRICE\n" );
    	sql.append("                     ELSE\n" );
    	sql.append("                      0\n" );
    	sql.append("                   END) NFCGJE1, --尿素与防冻液出库金额\n" );
    	sql.append("               SUM(T1.RETURN_COUNT * T1.SALE_PRICE) ZCGJE1 --总采购金额\n" );
    	sql.append("          FROM PT_BU_RETURN_APPLY     T,\n" );
    	sql.append("               PT_BU_RETURN_APPLY_DTL T1,\n" );
    	sql.append("               TM_ORG                 T2,\n" );
    	sql.append("               PT_BA_INFO             T3\n" );
    	sql.append("         WHERE T.RETURN_ID = T1.RETURN_ID\n" );
    	sql.append("           AND T.APPLY_ORG_CODE = T2.CODE\n" );
    	sql.append("           AND T1.PART_ID = T3.PART_ID\n" );
    	sql.append("           AND T.APPLY_SATUS = 202405\n" );
    	sql.append("           AND T2.ORG_TYPE IN (200006, 200007)\n" );
    	sql.append("           AND TO_CHAR(T.IN_STOCK_DATE, 'YYYY-MM-DD') >= '"+beginDate+"'\n" );
    	sql.append("           AND TO_CHAR(T.IN_STOCK_DATE, 'YYYY-MM-DD') <= '"+endDate+"'\n" );
    	sql.append("         GROUP BY T.APPLY_ORG_CODE) B,\n" );
    	sql.append("       TM_ORG C\n" );
    	sql.append(" WHERE A.ORG_CODE = B.ORG_CODE(+)\n" );
    	sql.append("   AND A.ORG_CODE = C.CODE");
    	return factory.select(null, sql.toString());
    }

}
