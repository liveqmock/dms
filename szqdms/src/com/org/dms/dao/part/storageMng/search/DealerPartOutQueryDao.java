package com.org.dms.dao.part.storageMng.search;

import com.org.dms.common.DicConstant;
import com.org.framework.base.BaseDAO;
import com.org.framework.common.BaseResultSet;
import com.org.framework.common.PageManager;
import com.org.framework.common.QuerySet;
import com.org.framework.common.User;
import com.org.mvc.context.ActionContext;

public class DealerPartOutQueryDao extends BaseDAO{
	public static final DealerPartOutQueryDao getInstance(ActionContext atx) {

		DealerPartOutQueryDao dao = new DealerPartOutQueryDao();
		atx.setDBFactory(dao.factory);

        return dao;
    }
	
	public BaseResultSet partOutSearch(PageManager page, User user, String conditions) throws Exception {
        String wheres = conditions;
        wheres += " AND T.STORAGE_TYPE= T1.ID ORDER BY T.PART_CODE DESC \n";
        page.setFilter(wheres);
        // 定义返回结果集
        BaseResultSet bs = null;
//        StringBuffer sql= new StringBuffer();
//        sql.append("SELECT T.CHANGE_ID,\n" );
//        sql.append("       T.STOCK_ID,\n" );
//        sql.append("       T.ORG_ID,\n" );
//        sql.append("       T.ORG_CODE,\n" );
//        sql.append("       T.ORG_NAME,\n" );
//        sql.append("       I.PART_CODE,\n" );
//        sql.append("       I.PART_NAME,\n" );
//        sql.append("       T.COUNT,\n" );
//        sql.append("       T.APPLY_DATE,\n" );
//        sql.append("       T.APPLY_TYPE,\n" );
//        sql.append("       T.SUPPLIER_NAME,\n" );
//        sql.append("       T.SUPPLIER_CODE,\n" );
//        sql.append("       T.STORAGE_TYPE,\n" );
//        sql.append("       T.OUT_NO\n" );
//        sql.append("  FROM PT_BU_DEALER_STOCK_CHANGE T,  PT_BA_INFO I");
        StringBuffer sql= new StringBuffer();
        sql.append("SELECT DISTINCT T.PART_CODE,T.PART_NAME,T.SUPPLIER_CODE,T.SUPPLIER_NAME,T.ORG_CODE,T.ORG_NAME,T.OUT_NO,T1.DIC_VALUE STORAGE_TYPE,T.COUNT,T.PRICE,T.AMOUNT,TO_CHAR(T.APPLY_DATE,'YYYY-MM-DD') APPLY_DATE\n" );
        sql.append(" FROM (SELECT C.PART_CODE,\n" );
        sql.append("       C.PART_NAME,\n" );
        sql.append("       B.SUPPLIER_CODE,\n" );
        sql.append("       B.SUPPLIER_NAME,\n" );
        sql.append("       A.ORG_CODE,\n" );
        sql.append("       A.ORG_NAME,\n" );
        sql.append("       A.ORDER_NO OUT_NO,\n" );
        sql.append("       "+DicConstant.QDCRKLX_01+" AS STORAGE_TYPE,\n" );
        sql.append("       C.COUNT,\n" );
        sql.append("       B.UNIT_PRICE PRICE,\n" );
        sql.append("       C.COUNT * B.UNIT_PRICE AMOUNT,\n" );
        sql.append("       C.APPLY_DATE\n" );
        sql.append("  FROM PT_BU_SALE_ORDER          A,\n" );
        sql.append("       PT_BU_SALE_ORDER_DTL      B,\n" );
        sql.append("       PT_BU_DEALER_STOCK_CHANGE C\n" );
        sql.append(" WHERE A.ORDER_ID = B.ORDER_ID\n" );
        sql.append("   AND A.ORDER_NO = C.OUT_NO\n" );
        sql.append("   AND B.PART_ID = C.PART_ID\n" );
        sql.append("   AND C.APPLY_TYPE = "+DicConstant.CZLX_02+"\n" );
        sql.append("   AND C.STORAGE_TYPE = "+DicConstant.QDCRKLX_01+"\n" );
        sql.append("   AND C.ORG_ID = "+user.getOrgId()+"\n" );
        sql.append("UNION\n" );
        sql.append("SELECT C.PART_CODE,\n" );
        sql.append("       C.PART_NAME,\n" );
        sql.append("       B.SUPPLIER_CODE,\n" );
        sql.append("       B.SUPPLIER_NAME,\n" );
        sql.append("       '' AS ORG_CODE,\n" );
        sql.append("       A.CUSTOMER_NAME ORG_NAME,\n" );
        sql.append("       A.SALE_NO OUT_NO,\n" );
        sql.append("       "+DicConstant.QDCRKLX_03+" AS STORAGE_TYPE,\n" );
        sql.append("       C.COUNT,\n" );
        sql.append("       B.SALE_PRICE PRICE,\n" );
        sql.append("       C.COUNT * B.SALE_PRICE AMOUNT,\n" );
        sql.append("       C.APPLY_DATE\n" );
        sql.append("  FROM PT_BU_REAL_SALE           A,\n" );
        sql.append("       PT_BU_REAL_SALE_DTL       B,\n" );
        sql.append("       PT_BU_DEALER_STOCK_CHANGE C\n" );
        sql.append(" WHERE A.SALE_ID = B.SALE_ID\n" );
        sql.append("   AND A.SALE_NO = C.OUT_NO\n" );
        sql.append("   AND B.PART_ID = C.PART_ID\n" );
        sql.append("   AND C.APPLY_TYPE = "+DicConstant.CZLX_02+"\n" );
        sql.append("   AND A.STATUS = "+DicConstant.YXBS_01+"\n" );
        sql.append("   AND C.STORAGE_TYPE = "+DicConstant.QDCRKLX_03+"\n" );
        sql.append("   AND C.ORG_ID = "+user.getOrgId()+"\n" );
        sql.append("UNION\n" );
        sql.append("SELECT C.PART_CODE,\n" );
        sql.append("       C.PART_NAME,\n" );
        sql.append("       B.SUPPLIER_CODE,\n" );
        sql.append("       B.SUPPLIER_NAME,\n" );
        sql.append("       A.RECEIVE_ORG_CODE ORG_CODE,\n" );
        sql.append("       A.RECEIVE_ORG_NAME ORG_NAME,\n" );
        sql.append("       A.RETURN_NO OUT_NO,\n" );
        sql.append("       "+DicConstant.QDCRKLX_05+" AS STORAGE_TYPE,\n" );
        sql.append("       C.COUNT,\n" );
        sql.append("       B.SALE_PRICE PRICE,\n" );
        sql.append("       C.COUNT * B.SALE_PRICE AMOUNT,\n" );
        sql.append("       C.APPLY_DATE\n" );
        sql.append("  FROM PT_BU_RETURN_APPLY        A,\n" );
        sql.append("       PT_BU_RETURN_APPLY_DTL    B,\n" );
        sql.append("       PT_BU_DEALER_STOCK_CHANGE C\n" );
        sql.append(" WHERE A.RETURN_ID = B.RETURN_ID\n" );
        sql.append("   AND A.RETURN_NO = C.OUT_NO\n" );
        sql.append("   AND B.PART_ID = C.PART_ID\n" );
        sql.append("   AND C.APPLY_TYPE = "+DicConstant.CZLX_02+"\n" );
        sql.append("   AND C.STORAGE_TYPE = "+DicConstant.QDCRKLX_05+"\n" );
        sql.append("   AND C.ORG_ID = "+user.getOrgId()+")T,DIC_TREE T1");
        bs = factory.select(sql.toString(), page);
        return bs;
    }
	 public QuerySet partOutDownload(String pConditions,User user) throws Exception {
		 StringBuffer sql= new StringBuffer();
	        sql.append("SELECT distinct T.PART_CODE,T.PART_NAME,T.SUPPLIER_CODE,T.SUPPLIER_NAME,T.ORG_CODE,T.ORG_NAME,T.OUT_NO,T1.DIC_VALUE STORAGE_TYPE,T.COUNT,T.PRICE,T.AMOUNT,TO_CHAR(T.APPLY_DATE,'YYYY-MM-DD') APPLY_DATE\n" );
	        sql.append(" FROM (SELECT C.PART_CODE,\n" );
	        sql.append("       C.PART_NAME,\n" );
	        sql.append("       B.SUPPLIER_CODE,\n" );
	        sql.append("       B.SUPPLIER_NAME,\n" );
	        sql.append("       A.ORG_CODE,\n" );
	        sql.append("       A.ORG_NAME,\n" );
	        sql.append("       A.ORDER_NO OUT_NO,\n" );
	        sql.append("       "+DicConstant.QDCRKLX_01+" AS STORAGE_TYPE,\n" );
	        sql.append("       C.COUNT,\n" );
	        sql.append("       B.UNIT_PRICE PRICE,\n" );
	        sql.append("       C.COUNT * B.UNIT_PRICE AMOUNT,\n" );
	        sql.append("       C.APPLY_DATE\n" );
	        sql.append("  FROM PT_BU_SALE_ORDER          A,\n" );
	        sql.append("       PT_BU_SALE_ORDER_DTL      B,\n" );
	        sql.append("       PT_BU_DEALER_STOCK_CHANGE C\n" );
	        sql.append(" WHERE A.ORDER_ID = B.ORDER_ID\n" );
	        sql.append("   AND A.ORDER_NO = C.OUT_NO\n" );
	        sql.append("   AND B.PART_ID = C.PART_ID\n" );
	        sql.append("   AND C.APPLY_TYPE = "+DicConstant.CZLX_02+"\n" );
	        sql.append("   AND C.STORAGE_TYPE = "+DicConstant.QDCRKLX_01+"\n" );
	        sql.append("   AND C.ORG_ID = "+user.getOrgId()+"\n" );
	        sql.append("UNION\n" );
	        sql.append("SELECT C.PART_CODE,\n" );
	        sql.append("       C.PART_NAME,\n" );
	        sql.append("       B.SUPPLIER_CODE,\n" );
	        sql.append("       B.SUPPLIER_NAME,\n" );
	        sql.append("       '' AS ORG_CODE,\n" );
	        sql.append("       A.CUSTOMER_NAME ORG_NAME,\n" );
	        sql.append("       A.SALE_NO OUT_NO,\n" );
	        sql.append("       "+DicConstant.QDCRKLX_03+" AS STORAGE_TYPE,\n" );
	        sql.append("       C.COUNT,\n" );
	        sql.append("       B.SALE_PRICE PRICE,\n" );
	        sql.append("       C.COUNT * B.SALE_PRICE AMOUNT,\n" );
	        sql.append("       C.APPLY_DATE\n" );
	        sql.append("  FROM PT_BU_REAL_SALE           A,\n" );
	        sql.append("       PT_BU_REAL_SALE_DTL       B,\n" );
	        sql.append("       PT_BU_DEALER_STOCK_CHANGE C\n" );
	        sql.append(" WHERE A.SALE_ID = B.SALE_ID\n" );
	        sql.append("   AND A.SALE_NO = C.OUT_NO\n" );
	        sql.append("   AND B.PART_ID = C.PART_ID\n" );
	        sql.append("   AND C.APPLY_TYPE = "+DicConstant.CZLX_02+"\n" );
	        sql.append("   AND C.STORAGE_TYPE = "+DicConstant.QDCRKLX_03+"\n" );
	        sql.append("   AND C.ORG_ID = "+user.getOrgId()+"\n" );
	        sql.append("UNION\n" );
	        sql.append("SELECT C.PART_CODE,\n" );
	        sql.append("       C.PART_NAME,\n" );
	        sql.append("       B.SUPPLIER_CODE,\n" );
	        sql.append("       B.SUPPLIER_NAME,\n" );
	        sql.append("       A.RECEIVE_ORG_CODE ORG_CODE,\n" );
	        sql.append("       A.RECEIVE_ORG_NAME ORG_NAME,\n" );
	        sql.append("       A.RETURN_NO OUT_NO,\n" );
	        sql.append("       "+DicConstant.QDCRKLX_05+" AS STORAGE_TYPE,\n" );
	        sql.append("       C.COUNT,\n" );
	        sql.append("       B.SALE_PRICE PRICE,\n" );
	        sql.append("       C.COUNT * B.SALE_PRICE AMOUNT,\n" );
	        sql.append("       C.APPLY_DATE\n" );
	        sql.append("  FROM PT_BU_RETURN_APPLY        A,\n" );
	        sql.append("       PT_BU_RETURN_APPLY_DTL    B,\n" );
	        sql.append("       PT_BU_DEALER_STOCK_CHANGE C\n" );
	        sql.append(" WHERE A.RETURN_ID = B.RETURN_ID\n" );
	        sql.append("   AND A.RETURN_NO = C.OUT_NO\n" );
	        sql.append("   AND B.PART_ID = C.PART_ID\n" );
	        sql.append("   AND C.APPLY_TYPE = "+DicConstant.CZLX_02+"\n" );
	        sql.append("   AND C.STORAGE_TYPE = "+DicConstant.QDCRKLX_05+"\n" );
	        sql.append("   AND C.ORG_ID = "+user.getOrgId()+")T,DIC_TREE T1\n");
	        sql.append("WHERE 1=1 AND "+pConditions+" AND T.STORAGE_TYPE= T1.ID AND T1.DIC_NAME_CODE ='QDCRKLX' ORDER BY T.PART_CODE DESC\n");
	        return factory.select(null, sql.toString());
	 }
	public BaseResultSet partInSearch(PageManager page, User user, String conditions) throws Exception {
        String wheres = conditions;
        wheres += " AND T.STORAGE_TYPE= T1.ID AND T1.DIC_NAME_CODE ='QDCRKLX' ORDER BY T.APPLY_DATE DESC\n";
        page.setFilter(wheres);
        // 定义返回结果集
        BaseResultSet bs = null;
//        StringBuffer sql= new StringBuffer();
//        sql.append("SELECT T.CHANGE_ID,\n" );
//        sql.append("       T.STOCK_ID,\n" );
//        sql.append("       T.ORG_ID,\n" );
//        sql.append("       T.ORG_CODE,\n" );
//        sql.append("       T.ORG_NAME,\n" );
//        sql.append("       I.PART_CODE,\n" );
//        sql.append("       I.PART_NAME,\n" );
//        sql.append("       T.COUNT,\n" );
//        sql.append("       T.APPLY_DATE,\n" );
//        sql.append("       T.APPLY_TYPE,\n" );
//        sql.append("       T.SUPPLIER_NAME,\n" );
//        sql.append("       T.SUPPLIER_CODE,\n" );
//        sql.append("       T.STORAGE_TYPE,\n" );
//        sql.append("       T.IN_NO\n" );
//        sql.append("  FROM PT_BU_DEALER_STOCK_CHANGE T,  PT_BA_INFO I");
        
        StringBuffer sql= new StringBuffer();
        sql.append("SELECT T.PART_CODE,\n" );
        sql.append("       T.PART_NAME,\n" );
        sql.append("       T.SUPPLIER_CODE,\n" );
        sql.append("       T.SUPPLIER_NAME,\n" );
        sql.append("       T.ORG_CODE,\n" );
        sql.append("       T.ORG_NAME,\n" );
        sql.append("       T.IN_NO,\n" );
        sql.append("       T1.DIC_VALUE STORAGE_TYPE,\n" );
        sql.append("       T.COUNT,\n" );
        sql.append("       T.PRICE,\n" );
        sql.append("       T.AMOUNT,\n" );
        sql.append("       TO_CHAR(T.APPLY_DATE, 'YYYY-MM-DD') APPLY_DATE\n" );
        sql.append("  FROM (SELECT C.PART_CODE,\n" );
        sql.append("               C.PART_NAME,\n" );
        sql.append("               B.SUPPLIER_CODE,\n" );
        sql.append("               B.SUPPLIER_NAME,\n" );
        sql.append("               A.WAREHOUSE_CODE ORG_CODE,\n" );
        sql.append("               A.WAREHOUSE_NAME ORG_NAME,\n" );
        sql.append("               A.ORDER_NO IN_NO,\n" );
        sql.append("               "+DicConstant.QDCRKLX_02+" AS STORAGE_TYPE,\n" );
        sql.append("               C.COUNT,\n" );
        sql.append("               B.UNIT_PRICE PRICE,\n" );
        sql.append("               C.COUNT * B.UNIT_PRICE AMOUNT,\n" );
        sql.append("               C.APPLY_DATE\n" );
        sql.append("          FROM PT_BU_SALE_ORDER          A,\n" );
        sql.append("               PT_BU_SALE_ORDER_DTL      B,\n" );
        sql.append("               PT_BU_DEALER_STOCK_CHANGE C\n" );
        sql.append("         WHERE A.ORDER_ID = B.ORDER_ID\n" );
        sql.append("           AND A.ORDER_NO = C.IN_NO\n" );
        sql.append("           AND B.PART_ID = C.PART_ID\n" );
        sql.append("           AND C.APPLY_TYPE = "+DicConstant.CZLX_01+"\n" );
        sql.append("           AND C.STORAGE_TYPE = "+DicConstant.QDCRKLX_02+"\n" );
        sql.append("           AND C.ORG_ID = "+user.getOrgId()+"\n" );
        sql.append("        UNION\n" );
        sql.append("        SELECT C.PART_CODE,\n" );
        sql.append("               C.PART_NAME,\n" );
        sql.append("               B.SUPPLIER_CODE,\n" );
        sql.append("               B.SUPPLIER_NAME,\n" );
        sql.append("               '' AS ORG_CODE,\n" );
        sql.append("               A.CUSTOMER_NAME ORG_NAME,\n" );
        sql.append("               A.SALE_NO IN_NO,\n" );
        sql.append("               "+DicConstant.QDCRKLX_04+" AS STORAGE_TYPE,\n" );
        sql.append("               C.COUNT,\n" );
        sql.append("               B.SALE_PRICE PRICE,\n" );
        sql.append("               C.COUNT * B.SALE_PRICE AMOUNT,\n" );
        sql.append("               C.APPLY_DATE\n" );
        sql.append("          FROM PT_BU_REAL_SALE           A,\n" );
        sql.append("               PT_BU_REAL_SALE_DTL       B,\n" );
        sql.append("               PT_BU_REAL_SALE_RETURN    D,\n" );
        sql.append("               PT_BU_DEALER_STOCK_CHANGE C\n" );
        sql.append("         WHERE A.SALE_ID = B.SALE_ID\n" );
        sql.append("           AND A.SALE_NO = C.IN_NO\n" );
        sql.append("           AND B.PART_ID = C.PART_ID\n" );
        sql.append("           AND A.SALE_ID = D.SALE_ID\n" );
        sql.append("           AND B.PART_ID = D.PART_ID\n" );
        sql.append("           AND C.APPLY_TYPE = "+DicConstant.CZLX_01+"\n" );
        sql.append("           AND C.STORAGE_TYPE = "+DicConstant.QDCRKLX_04+"\n" );
        sql.append("           AND C.ORG_ID = "+user.getOrgId()+"\n" );
        sql.append("        UNION\n" );
        sql.append("        SELECT C.PART_CODE,\n" );
        sql.append("               C.PART_NAME,\n" );
        sql.append("               B.SUPPLIER_CODE,\n" );
        sql.append("               B.SUPPLIER_NAME,\n" );
        sql.append("               A.APPLY_ORG_CODE ORG_CODE,\n" );
        sql.append("               A.APPLY_ORG_NAME ORG_NAME,\n" );
        sql.append("               A.RETURN_NO IN_NO,\n" );
        sql.append("               "+DicConstant.QDCRKLX_06+" AS STORAGE_TYPE,\n" );
        sql.append("               C.COUNT,\n" );
        sql.append("               B.SALE_PRICE PRICE,\n" );
        sql.append("               C.COUNT * B.SALE_PRICE AMOUNT,\n" );
        sql.append("               C.APPLY_DATE\n" );
        sql.append("          FROM PT_BU_RETURN_APPLY        A,\n" );
        sql.append("               PT_BU_RETURN_APPLY_DTL    B,\n" );
        sql.append("               PT_BU_DEALER_STOCK_CHANGE C\n" );
        sql.append("         WHERE A.RETURN_ID = B.RETURN_ID\n" );
        sql.append("           AND A.RETURN_NO = C.IN_NO\n" );
        sql.append("           AND B.PART_ID = C.PART_ID\n" );
        sql.append("           AND C.APPLY_TYPE = "+DicConstant.CZLX_01+"\n" );
        sql.append("           AND C.STORAGE_TYPE = "+DicConstant.QDCRKLX_06+"\n" );
        sql.append("           AND C.ORG_ID = "+user.getOrgId()+") T,\n" );
        sql.append("       DIC_TREE T1\n" );
        bs = factory.select(sql.toString(), page);
        return bs;
    }
	
	public QuerySet partInDownload(String pConditions,User user) throws Exception {
		 StringBuffer sql= new StringBuffer();
	        sql.append("SELECT T.PART_CODE,\n" );
	        sql.append("       T.PART_NAME,\n" );
	        sql.append("       T.SUPPLIER_CODE,\n" );
	        sql.append("       T.SUPPLIER_NAME,\n" );
	        sql.append("       T.ORG_CODE,\n" );
	        sql.append("       T.ORG_NAME,\n" );
	        sql.append("       T.IN_NO,\n" );
	        sql.append("       T1.DIC_VALUE STORAGE_TYPE,\n" );
	        sql.append("       T.COUNT,\n" );
	        sql.append("       T.PRICE,\n" );
	        sql.append("       T.AMOUNT,\n" );
	        sql.append("       TO_CHAR(T.APPLY_DATE, 'YYYY-MM-DD') APPLY_DATE\n" );
	        sql.append("  FROM (SELECT C.PART_CODE,\n" );
	        sql.append("               C.PART_NAME,\n" );
	        sql.append("               B.SUPPLIER_CODE,\n" );
	        sql.append("               B.SUPPLIER_NAME,\n" );
	        sql.append("               A.WAREHOUSE_CODE ORG_CODE,\n" );
	        sql.append("               A.WAREHOUSE_NAME ORG_NAME,\n" );
	        sql.append("               A.ORDER_NO IN_NO,\n" );
	        sql.append("               "+DicConstant.QDCRKLX_02+" AS STORAGE_TYPE,\n" );
	        sql.append("               C.COUNT,\n" );
	        sql.append("               B.UNIT_PRICE PRICE,\n" );
	        sql.append("               C.COUNT * B.UNIT_PRICE AMOUNT,\n" );
	        sql.append("               C.APPLY_DATE\n" );
	        sql.append("          FROM PT_BU_SALE_ORDER          A,\n" );
	        sql.append("               PT_BU_SALE_ORDER_DTL      B,\n" );
	        sql.append("               PT_BU_DEALER_STOCK_CHANGE C\n" );
	        sql.append("         WHERE A.ORDER_ID = B.ORDER_ID\n" );
	        sql.append("           AND A.ORDER_NO = C.IN_NO\n" );
	        sql.append("           AND B.PART_ID = C.PART_ID\n" );
	        sql.append("           AND C.APPLY_TYPE = "+DicConstant.CZLX_01+"\n" );
	        sql.append("           AND C.STORAGE_TYPE = "+DicConstant.QDCRKLX_02+"\n" );
	        sql.append("           AND C.ORG_ID = "+user.getOrgId()+"\n" );
	        sql.append("        UNION\n" );
	        sql.append("        SELECT C.PART_CODE,\n" );
	        sql.append("               C.PART_NAME,\n" );
	        sql.append("               B.SUPPLIER_CODE,\n" );
	        sql.append("               B.SUPPLIER_NAME,\n" );
	        sql.append("               '' AS ORG_CODE,\n" );
	        sql.append("               A.CUSTOMER_NAME ORG_NAME,\n" );
	        sql.append("               A.SALE_NO IN_NO,\n" );
	        sql.append("               "+DicConstant.QDCRKLX_04+" AS STORAGE_TYPE,\n" );
	        sql.append("               C.COUNT,\n" );
	        sql.append("               B.SALE_PRICE PRICE,\n" );
	        sql.append("               C.COUNT * B.SALE_PRICE AMOUNT,\n" );
	        sql.append("               C.APPLY_DATE\n" );
	        sql.append("          FROM PT_BU_REAL_SALE           A,\n" );
	        sql.append("               PT_BU_REAL_SALE_DTL       B,\n" );
	        sql.append("               PT_BU_REAL_SALE_RETURN    D,\n" );
	        sql.append("               PT_BU_DEALER_STOCK_CHANGE C\n" );
	        sql.append("         WHERE A.SALE_ID = B.SALE_ID\n" );
	        sql.append("           AND A.SALE_NO = C.IN_NO\n" );
	        sql.append("           AND B.PART_ID = C.PART_ID\n" );
	        sql.append("           AND A.SALE_ID = D.SALE_ID\n" );
	        sql.append("           AND B.PART_ID = D.PART_ID\n" );
	        sql.append("           AND C.APPLY_TYPE = "+DicConstant.CZLX_01+"\n" );
	        sql.append("           AND C.STORAGE_TYPE = "+DicConstant.QDCRKLX_04+"\n" );
	        sql.append("           AND C.ORG_ID = "+user.getOrgId()+"\n" );
	        sql.append("        UNION\n" );
	        sql.append("        SELECT C.PART_CODE,\n" );
	        sql.append("               C.PART_NAME,\n" );
	        sql.append("               B.SUPPLIER_CODE,\n" );
	        sql.append("               B.SUPPLIER_NAME,\n" );
	        sql.append("               A.APPLY_ORG_CODE ORG_CODE,\n" );
	        sql.append("               A.APPLY_ORG_NAME ORG_NAME,\n" );
	        sql.append("               A.RETURN_NO IN_NO,\n" );
	        sql.append("               "+DicConstant.QDCRKLX_06+" AS STORAGE_TYPE,\n" );
	        sql.append("               C.COUNT,\n" );
	        sql.append("               B.SALE_PRICE PRICE,\n" );
	        sql.append("               C.COUNT * B.SALE_PRICE AMOUNT,\n" );
	        sql.append("               C.APPLY_DATE\n" );
	        sql.append("          FROM PT_BU_RETURN_APPLY        A,\n" );
	        sql.append("               PT_BU_RETURN_APPLY_DTL    B,\n" );
	        sql.append("               PT_BU_DEALER_STOCK_CHANGE C\n" );
	        sql.append("         WHERE A.RETURN_ID = B.RETURN_ID\n" );
	        sql.append("           AND A.RETURN_NO = C.IN_NO\n" );
	        sql.append("           AND B.PART_ID = C.PART_ID\n" );
	        sql.append("           AND C.APPLY_TYPE = "+DicConstant.CZLX_01+"\n" );
	        sql.append("           AND C.STORAGE_TYPE = "+DicConstant.QDCRKLX_06+"\n" );
	        sql.append("           AND C.ORG_ID = "+user.getOrgId()+") T,\n" );
	        sql.append("       DIC_TREE T1\n" );
	        sql.append("WHERE 1=1 AND "+pConditions+" AND T.STORAGE_TYPE= T1.ID AND T1.DIC_NAME_CODE ='QDCRKLX' ORDER BY T.APPLY_DATE DESC\n");
	        return factory.select(null, sql.toString());
	 }
}
