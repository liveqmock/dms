package com.org.dms.dao.service.claimmng;import com.org.dms.vo.service.SeBuWorkDispatchUerVO;import com.org.framework.base.BaseDAO;import com.org.framework.common.BaseResultSet;import com.org.framework.common.PageManager;import com.org.framework.common.QuerySet;import com.org.framework.common.User;import com.org.mvc.context.ActionContext; /**   * SeBuWorkDispatchUerDao   * <p>Company: szq</p>   * @author baixiaoliang   * @version 1.0  2014-7-14  */public class SeBuWorkDispatchUerDao extends BaseDAO{	//定义instance 	public  static final SeBuWorkDispatchUerDao getInstance(ActionContext atx) 	{		SeBuWorkDispatchUerDao dao = new SeBuWorkDispatchUerDao(); 		atx.setDBFactory(dao.factory);		return dao;	}    	 /**	  * 工单人员派工维护	  * @param page	  * @param user	  * @param conditions	  * @return	  * @throws Exception	  */	public BaseResultSet search(PageManager page, User user, String conditions) throws Exception	{	    BaseResultSet bs = null;	    StringBuffer sql = new StringBuffer();	    sql.append("SELECT T.ADDRESS,\n" );	    sql.append("       T.COMPANY_ID,\n" );	    sql.append("       T.CREATE_TIME,\n" );	    sql.append("       T.CREATE_USER,\n" );	    sql.append("       T.MOBIL,\n" );	    sql.append("       T.ORG_ID,\n" );	    sql.append("       T.REMARKS,\n" );	    sql.append("       T.STATUS,\n" );	    sql.append("       T.UPDATE_TIME,\n" );	    sql.append("       T.UPDATE_USER,\n" );	    sql.append("       T.USER_ID,\n" );	    sql.append("       T.USER_NAME,\n" );	    sql.append("       T.USER_STATUS\n" );	    sql.append("  FROM SE_BU_WORK_DISPATCH_UER T");	    sql.append("  WHERE "+conditions+" ");	    sql.append("    AND T.ORG_ID = "+user.getOrgId()+" ");	    bs = factory.select(sql.toString(), page);	    bs.setFieldDateFormat("CREATE_TIME", "yyyy-MM-dd");	    bs.setFieldDateFormat("UPDATE_TIME", "yyyy-MM-dd");		bs.setFieldDic("STATUS","YXBS");		bs.setFieldDic("USER_STATUS","YXBS");			return bs;	}            	/**	 * 新增	 * @param vo	 * @return	 * @throws Exception	 */	public boolean insert(SeBuWorkDispatchUerVO vo) throws Exception {		return factory.insert(vo);    }	 /**	  * 修改	  * @param vo	  * @return	  * @throws Exception	  */	public boolean update(SeBuWorkDispatchUerVO vo) throws Exception {         return factory.update(vo);    } 	 /**	  * 	  * @param userId	  * @return	  * @throws Exception	  */	public QuerySet check(String userId) throws Exception	{		QuerySet qs = null;		StringBuffer sql = new StringBuffer();		sql.append("  SELECT COUNT(1) NUMS FROM  SE_BU_WORK_DISPATCH_UER ");		sql.append("  WHERE USER_ID=");		sql.append(userId);		qs = factory.select(null, sql.toString());		return qs;	} 	 /**	 @throws Exception    设定文件 	   * @return boolean    返回类型 	  */	public boolean delete(String userId) throws Exception	{		StringBuffer sql = new StringBuffer();		sql.append("  DELETE SE_BU_WORK_DISPATCH_UER ");		sql.append("  WHERE USER_ID=");		sql.append(userId );		return factory.delete(sql.toString(), null);	}}
