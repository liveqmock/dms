package com.org.dms.dao.service.basicinfomng;import com.org.dms.vo.service.SeBaRuleVO;import com.org.framework.base.BaseDAO;import com.org.framework.common.BaseResultSet;import com.org.framework.common.PageManager;import com.org.framework.common.QuerySet;import com.org.framework.common.User;import com.org.mvc.context.ActionContext; /**   * SeBaRuleDao   * <p>Company: szq</p>   * @author baixiaoliang   * @version 1.0  2014-7-14  */public class SeBaRuleDao extends BaseDAO{ 		   //定义instance    public  static final SeBaRuleDao getInstance(ActionContext atx) {SeBaRuleDao dao = new SeBaRuleDao();  atx.setDBFactory(dao.factory);return dao; }  /**   * @auther baixiaoliang   * @return String  */ public boolean insert(SeBaRuleVO vo) throws Exception {         return factory.insert(vo);       } /**   *     * @return boolean   */ public boolean update(SeBaRuleVO vo) throws Exception {         return factory.update(vo);       } /** @throws Exception    设定文件    * @return BaseResultSet    返回类型   */ public BaseResultSet search(PageManager page, User user, String conditions) throws Exception{	String wheres = conditions;// wheres += " AND T.MODELS_ID = B.MODELS_ID AND T.POSITION_ID = C.POSITION_ID";	  page.setFilter(wheres);	  //定义返回结果集	  BaseResultSet bs = null;StringBuffer sql = new StringBuffer();sql.append("  SELECT  ");    sql.append(" T.COMPANY_ID,");    sql.append(" T.CREATE_TIME,");    sql.append(" T.CREATE_USER,");    sql.append(" T.OEM_COMPANY_ID,");    sql.append(" T.ORG_ID,");    sql.append(" T.REMARKS,");    sql.append(" T.RULE_CODE,");    sql.append(" T.RULE_ID,");    sql.append(" T.RULE_NAME,");    sql.append(" T.RULE_STATUS,");    sql.append(" T.SECRET_LEVEL,");    sql.append(" T.STATUS,");    sql.append(" T.UPDATE_TIME,");    sql.append(" T.UPDATE_USER,");    sql.append(" T.USER_TYPE");sql.append(" FROM SE_BA_RULE T ");//执行方法，不需要传递conn参数bs = factory.select(sql.toString(), page);    bs.setFieldDateFormat("CREATE_TIME", "yyyy-MM-dd");    bs.setFieldDateFormat("UPDATE_TIME", "yyyy-MM-dd");		bs.setFieldDic("STATUS","YXBS");	bs.setFieldDic("USER_TYPE","CLYHLX");	bs.setFieldDic("RULE_STATUS","YXBS");//绑定组织字典，将ORG_ID翻译为组织名称//bs.setFieldOrgDeptSimpleName("ORG_ID");//bs.setFieldOrgCompanySimpleName("COMPANY_ID"); return bs; } /** @throws Exception    设定文件    * @return QuerySet    返回类型   */public QuerySet check(String ruleId) throws Exception{QuerySet qs = null;StringBuffer sql = new StringBuffer();sql.append("  SELECT COUNT(1) NUMS FROM  SE_BA_RULE ");sql.append("  WHERE RULE_ID=");sql.append(ruleId );qs = factory.select(null, sql.toString());return qs; }  /** @throws Exception    设定文件    * @return boolean    返回类型   */public boolean delete(String ruleId) throws Exception{StringBuffer sql = new StringBuffer();sql.append("  DELETE SE_BA_RULE ");sql.append("  WHERE RULE_ID=");sql.append(ruleId );return factory.delete(sql.toString(), null); } }
