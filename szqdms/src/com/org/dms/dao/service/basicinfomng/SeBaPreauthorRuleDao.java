package com.org.dms.dao.service.basicinfomng;import com.org.dms.common.DicConstant;import com.org.dms.vo.service.SeBaPreauthorRuleDtlVO;import com.org.dms.vo.service.SeBaPreauthorRuleVO;import com.org.framework.base.BaseDAO;import com.org.framework.common.BaseResultSet;import com.org.framework.common.PageManager;import com.org.framework.common.QuerySet;import com.org.framework.common.User;import com.org.mvc.context.ActionContext; /**   * SeBaPreauthorRuleDao   * <p>Company: szq</p>   * @author baixiaoliang   * @version 1.0  2014-7-14  */public class SeBaPreauthorRuleDao extends BaseDAO{ 		   //定义instance    public  static final SeBaPreauthorRuleDao getInstance(ActionContext atx) {SeBaPreauthorRuleDao dao = new SeBaPreauthorRuleDao();  atx.setDBFactory(dao.factory);return dao; }  /**   * @auther baixiaoliang   * @return String  */ public boolean insert(SeBaPreauthorRuleVO vo) throws Exception {         return factory.insert(vo);       } /**  * @auther baixiaoliang  * @return String */public boolean insertRule(SeBaPreauthorRuleVO vo,SeBaPreauthorRuleDtlVO ruleDtlVo) throws Exception {	           boolean bs1=factory.insert(vo);      /*      QuerySet qs = null;  	StringBuffer sql = new StringBuffer();  	sql.append("  SELECT RULE_ID FROM  se_ba_preauthor_rule ");  	sql.append("  WHERE LEVEL_CODE='");  	sql.append(vo.getLevelCode());  	sql.append("'");  	qs = factory.select(null, sql.toString());  	  	//明细表加入规则表rule_id     if(qs.getRowCount()>0)  	 {   	String ruleID= qs.getString(1, "RULE_ID");	   	if(ruleID!=null&&!ruleID.equals("")){  		ruleDtlVo.setRuleId(ruleID);    	}        }*/      ruleDtlVo.setRuleId(vo.getRuleId());	// 插入明细表		boolean bs3= factory.insert(ruleDtlVo);           return bs1&&bs3;      } /** * @auther baixiaoliang * @return String*/public boolean updateRule(SeBaPreauthorRuleVO vo,SeBaPreauthorRuleDtlVO ruleDtlVo) throws Exception {	    /*     QuerySet qs = null; 	StringBuffer sql = new StringBuffer(); 	sql.append("  SELECT RULE_ID FROM  se_ba_preauthor_rule "); 	sql.append("  WHERE LEVEL_CODE='"); 	sql.append(vo.getLevelCode()); 	sql.append("'"); 	qs = factory.select(null, sql.toString()); 	 	//明细表加入规则表rule_id    if(qs.getRowCount()>0) 	 {  	String ruleID= qs.getString(1, "RULE_ID");	  	if(ruleID!=null&&!ruleID.equals("")){ 		ruleDtlVo.setRuleId(ruleID);   	}      }*/		// 插入明细表		boolean bs3= factory.insert(ruleDtlVo);          return bs3;     }  /**   *     * @return boolean   */ public boolean update(SeBaPreauthorRuleVO vo) throws Exception {         return factory.update(vo);       } /** @throws Exception    设定文件    * @return BaseResultSet    返回类型   */ public BaseResultSet search(PageManager page, User user, String conditions) throws Exception{	String wheres = conditions;// wheres += " AND T.MODELS_ID = B.MODELS_ID AND T.POSITION_ID = C.POSITION_ID";	  page.setFilter(wheres);	  //定义返回结果集	  BaseResultSet bs = null;StringBuffer sql = new StringBuffer();sql.append("  SELECT  ");    sql.append(" T.COMPANY_ID,");    sql.append(" T.CREATE_TIME,");    sql.append(" T.CREATE_USER,");    sql.append(" T.LEVEL_CODE,");    sql.append(" T.LEVEL_ID,");    sql.append(" T.LEVEL_NAME,");    sql.append(" T.OEM_COMPANY_ID,");    sql.append(" T.ORG_ID,");    sql.append(" T.PREAUTHO_LEVEL,");    sql.append(" T.PREAUTHO_NAME,");    sql.append(" T.RULE_ID,");    sql.append(" T.SECRET_LEVEL,");    sql.append(" T.STATUS,");    sql.append(" T.UPDATE_TIME,");    sql.append(" T.UPDATE_USER");sql.append(" FROM SE_BA_PREAUTHOR_RULE T ");//执行方法，不需要传递conn参数bs = factory.select(sql.toString(), page);    bs.setFieldDateFormat("CREATE_TIME", "yyyy-MM-dd");    bs.setFieldDateFormat("UPDATE_TIME", "yyyy-MM-dd");		bs.setFieldDic("STATUS","YXBS");	//	bs.setFieldDic("USER_TYPE","CLYHLX");//绑定组织字典，将ORG_ID翻译为组织名称//bs.setFieldOrgDeptSimpleName("ORG_ID");//bs.setFieldOrgCompanySimpleName("COMPANY_ID"); return bs; }  /** @throws Exception    设定文件    * @return BaseResultSet    返回类型   */ public BaseResultSet searchLevelCode(PageManager page, User user, String conditions) throws Exception{	 	 QuerySet qs=null;	 String levelCode="";	 StringBuffer sql2 = new StringBuffer();	 sql2.append("  SELECT LEVEL_CODE,LEVEL_NAME FROM  SE_BA_PREAUTHOR_LEVEL ");	 sql2.append("  WHERE STATUS="+DicConstant.YXBS_01); 	 qs=factory.select(null, sql2.toString());	 	String wheres = conditions;   //  wheres += " AND ROWNUM=1";	  page.setFilter(wheres);	  //定义返回结果集	  BaseResultSet bs = null;StringBuffer sql = new StringBuffer();sql.append("  SELECT  ");    sql.append(" T.COMPANY_ID,");    sql.append(" T.CREATE_TIME,");    sql.append(" T.CREATE_USER,");    sql.append(" T.LEVEL_CODE,");    sql.append(" T.LEVEL_ID,");    sql.append(" T.LEVEL_NAME,");    sql.append(" T.OEM_COMPANY_ID,");    sql.append(" T.ORG_ID,");    sql.append(" T.PREAUTHO_LEVEL,");    sql.append(" T.PREAUTHO_NAME,");    sql.append(" T.RULE_ID,");    sql.append(" T.SECRET_LEVEL,");    sql.append(" T.STATUS,");    sql.append(" T.UPDATE_TIME,");    sql.append(" T.UPDATE_USER");    if(qs.getRowCount()>0)    {      	for(int i = 1 ; i <= qs.getRowCount(); i++){    	levelCode=qs.getString(i, "LEVEL_CODE");    	sql.append(" ,CASE WHEN instr(T.LEVEL_CODE,'"+    			levelCode+"')>0 then '"+    			levelCode+"' else '' end \""+    			"LEVELCODE"+levelCode+"\"");    	    	}     }/*    for(int i = 0 ; i < list.size(); i++){		HashMap tcpo = (HashMap)list.get(i);		sql.append(" ,CASE WHEN instr(tawr.AUTH_LEVEL,'"+tcpo.get("LEVEL_CODE")+"')>0 then '"+tcpo.get("LEVEL_CODE")+"' else '' end \""+tcpo.get("LEVEL_CODE")+"\"");	}*/    sql.append(" FROM SE_BA_PREAUTHOR_RULE T");//执行方法，不需要传递conn参数bs = factory.select(sql.toString(), page);    bs.setFieldDateFormat("CREATE_TIME", "yyyy-MM-dd");    bs.setFieldDateFormat("UPDATE_TIME", "yyyy-MM-dd");		bs.setFieldDic("STATUS","YXBS");	//	bs.setFieldDic("USER_TYPE","CLYHLX");//绑定组织字典，将ORG_ID翻译为组织名称//bs.setFieldOrgDeptSimpleName("ORG_ID");//bs.setFieldOrgCompanySimpleName("COMPANY_ID"); return bs; } /** @throws Exception    设定文件    * @return QuerySet    返回类型   */public QuerySet check(String ruleId) throws Exception{QuerySet qs = null;StringBuffer sql = new StringBuffer();sql.append("  SELECT COUNT(1) NUMS FROM  SE_BA_PREAUTHOR_RULE ");sql.append("  WHERE RULE_ID=");sql.append(ruleId );qs = factory.select(null, sql.toString());return qs; }  /** @throws Exception    设定文件    * @return boolean    返回类型   */public boolean delete(String ruleId) throws Exception{StringBuffer sql = new StringBuffer();sql.append("  DELETE SE_BA_PREAUTHOR_RULE ");sql.append("  WHERE RULE_ID=");sql.append(ruleId );return factory.delete(sql.toString(), null); } /** * 更新规则名称@throws Exception    设定文件   * @return boolean    返回类型  */public boolean updatePreauthoName(String ruleId,String preauthoName) throws Exception{StringBuffer sql = new StringBuffer();sql.append("  UPDATE  SE_BA_PREAUTHOR_RULE SET PREAUTHO_NAME='");sql.append(preauthoName);sql.append("  '");sql.append("  WHERE RULE_ID=");sql.append(ruleId );return factory.delete(sql.toString(), null);}}
