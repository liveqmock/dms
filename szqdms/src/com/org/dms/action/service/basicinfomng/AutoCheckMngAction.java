package com.org.dms.action.service.basicinfomng;import com.org.dms.vo.service.SeBaAutoCheckVO;import com.org.dms.dao.service.basicinfomng.SeBaAutoCheckDao;import java.util.HashMap;import org.apache.log4j.Logger;import com.org.dms.common.DicConstant;import com.org.framework.Globals;import com.org.framework.common.User;import com.org.mvc.context.ActionContext;import com.org.framework.common.BaseResultSet;import com.org.framework.common.PageManager;import com.org.framework.common.QuerySet;import com.org.framework.log.LogManager;import com.org.framework.util.Pub;import com.org.framework.util.RequestUtil;import com.org.mvc.context.RequestWrapper; /**   * 自动审核规则   * <p>Company: szq</p>   * @author baixiaoliang   * @version 1.0  2014-7-14  */public class AutoCheckMngAction{ 		   private Logger logger = com.org.framework.log.log.getLogger("AutoCheckMngAction");		   private ActionContext atx = ActionContext.getContext();   private SeBaAutoCheckDao dao=SeBaAutoCheckDao.getInstance(atx);  /**   * @auther baixiaoliang   * 自动审核规则新增   * @return void  */    public void insert() throws Exception { 			RequestWrapper request = atx.getRequest();           User user = (User) atx.getSession().get(Globals.USER_KEY);            try            {            SeBaAutoCheckVO vo = new SeBaAutoCheckVO();            //SeBaAutoCheckVO_Ext voExt=new SeBaAutoCheckVO_Ext();            HashMap<String,String> hm;            hm = RequestUtil.getValues(request);            vo.setValue(hm);        	//判断是否已存在			QuerySet qs = dao.check(vo.getRuleCode());			if(qs.getRowCount() > 0)			{				String n = qs.getString(1, 1);				if(Integer.parseInt(n) > 0)				{					throw new Exception("自动审核规则已存在，保存失败！");				}			}            //voExt.setValue(hm);            vo.setCreateUser(user.getAccount());            vo.setCreateTime(Pub.getCurrentDate());            dao.insert(vo);            //	voExt.setRuleId(vo.getRuleId());           //voExt.bindFieldToDic("STATUS","YXBS");           //voExt.bindFieldToDic("USER_TYPE","CLYHLX");           //atx.setOutMsg(voExt.getRowXml(),"自动审核规则新增成功！");            atx.setOutMsg(vo.getRowXml(),"自动审核规则新增成功！");       }           catch (Exception e)       {      atx.setException(e);      logger.error(e);       }       } /**   * @auther baixiaoliang   * 自动审核规则新增   * @return void  */    public void update() throws Exception { 			RequestWrapper request = atx.getRequest();           User user = (User) atx.getSession().get(Globals.USER_KEY);            try            {            SeBaAutoCheckVO vo = new SeBaAutoCheckVO();            //SeBaAutoCheckVO_Ext voExt=new SeBaAutoCheckVO_Ext();            HashMap<String,String> hm;            hm = RequestUtil.getValues(request);            vo.setValue(hm);            //voExt.setValue(hm);            vo.setUpdateUser(user.getAccount());            vo.setUpdateTime(Pub.getCurrentDate());            dao.update(vo);            //voExt.setRuleId(vo.getRuleId());           //voExt.bindFieldToDic("STATUS","YXBS");           //voExt.bindFieldToDic("USER_TYPE","CLYHLX");           //atx.setOutMsg(voExt.getRowXml(),"自动审核规则修改成功！");            atx.setOutMsg(vo.getRowXml(),"自动审核规则修改成功！");       }           catch (Exception e)       {      atx.setException(e);      logger.error(e);       }       } /**   * @auther baixiaoliang   * 自动审核规则删除   * @return void  */    public void delete() throws Exception { 			RequestWrapper request = atx.getRequest();            String status = Pub.val(request, "status");            String ruleId = Pub.val(request, "ruleId");            try            {            if(DicConstant.YXBS_02.equals(status)){              dao.delete(ruleId);              atx.setOutMsg("","自动审核规则额删除成功！");              }else{              atx.setOutMsg("","只有无效的才可以进行删除操作！");              }       }           catch (Exception e)       {      atx.setException(e);      logger.error(e);       }       } /**   * @auther baixiaoliang   * 自动审核规则查询   * @return void  */    public void search() throws Exception { 			RequestWrapper request = atx.getRequest();           User user = (User) atx.getSession().get(Globals.USER_KEY); 			PageManager page = new PageManager();           String conditions = RequestUtil.getConditionsWhere(request,page);            try            {         BaseResultSet bs = dao.search(page,user,conditions);         atx.setOutData("bs", bs);       }           catch (Exception e)       {      atx.setException(e);      logger.error(e);       }       } /**   * @auther baixiaoliang   * 自动审核规则删除   * @return void  */    public void resetStatus() throws Exception { 			RequestWrapper request = atx.getRequest(); 		User user = (User) atx.getSession().get(Globals.USER_KEY);           // String status = Pub.val(request, "status");            String ruleStatus = Pub.val(request, "ruleStatus");            String ruleId = Pub.val(request, "ruleId");            try            {            SeBaAutoCheckVO vo = new SeBaAutoCheckVO();             vo.setRuleId(ruleId);             vo.setUpdateUser(user.getAccount());             	vo.setUpdateTime(Pub.getCurrentDate());            //	vo.setStatus(status);            	vo.setRuleStatus(ruleStatus);              dao.update(vo);              atx.setOutMsg(vo.getRowXml(),"自动审核规则状态更新成功！");              //日志              LogManager.writeUserLog("","",Globals.OPERATION_TYPE_INSERT,LogManager.RESULT_SUCCESS                                      ,"自动审核规则 ["+ruleId+" / "+ruleStatus+"] 成功",user);                     }           catch (Exception e)       {      atx.setException(e);      logger.error(e);      //日志      LogManager.writeUserLog("", "", Globals.OPERATION_TYPE_INSERT, LogManager.RESULT_FAILURE,"自动审核规则失败："+e.toString(), user);       }       }}
