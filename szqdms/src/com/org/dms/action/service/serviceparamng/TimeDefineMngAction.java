package com.org.dms.action.service.serviceparamng;import com.org.dms.vo.service.SeBaTimeDefineVO;import java.util.HashMap;import org.apache.log4j.Logger;import com.org.dms.common.DicConstant;import com.org.dms.dao.service.serviceparamng.SeBaTimeDefineDao;import com.org.framework.Globals;import com.org.framework.common.User;import com.org.mvc.context.ActionContext;import com.org.framework.common.BaseResultSet;import com.org.framework.common.PageManager;import com.org.framework.util.Pub;import com.org.framework.util.RequestUtil;import com.org.mvc.context.RequestWrapper;import com.org.framework.log.LogManager;; /**   * 时间定义   * <p>Company: szq</p>   * @author baixiaoliang   * @version 1.0  2014-7-14  */public class TimeDefineMngAction{ 		   private Logger logger = com.org.framework.log.log.getLogger("TimeDefineMngAction");		   private ActionContext atx = ActionContext.getContext();   private SeBaTimeDefineDao dao=SeBaTimeDefineDao.getInstance(atx);  /**   * @auther baixiaoliang   * 时间定义新增   * @return void  */    public void insert() throws Exception { 			RequestWrapper request = atx.getRequest();           User user = (User) atx.getSession().get(Globals.USER_KEY);            try            {            SeBaTimeDefineVO vo = new SeBaTimeDefineVO();            //SeBaTimeDefineVO_Ext voExt=new SeBaTimeDefineVO_Ext();            HashMap<String,String> hm;            hm = RequestUtil.getValues(request);            vo.setValue(hm);            //voExt.setValue(hm);            vo.setCreateUser(user.getAccount());            vo.setCreateTime(Pub.getCurrentDate());            dao.insert(vo);            vo.bindFieldToDic("STATUS","YXBS");            //	voExt.setDefineId(vo.getDefineId());           //voExt.bindFieldToDic("STATUS","YXBS");           //voExt.bindFieldToDic("USER_TYPE","CLYHLX");           //atx.setOutMsg(voExt.getRowXml(),"时间定义新增成功！");            atx.setOutMsg(vo.getRowXml(),"时间定义新增成功！");       }           catch (Exception e)       {      atx.setException(e);      logger.error(e);       }       } /**   * @auther baixiaoliang   * 时间定义新增   * @return void  */    public void update() throws Exception { 			RequestWrapper request = atx.getRequest();           User user = (User) atx.getSession().get(Globals.USER_KEY);            try            {            SeBaTimeDefineVO vo = new SeBaTimeDefineVO();            //SeBaTimeDefineVO_Ext voExt=new SeBaTimeDefineVO_Ext();            HashMap<String,String> hm;            hm = RequestUtil.getValues(request);            vo.setValue(hm);            //voExt.setValue(hm);            vo.setUpdateUser(user.getAccount());            vo.setUpdateTime(Pub.getCurrentDate());            dao.update(vo);            //voExt.setDefineId(vo.getDefineId());           //voExt.bindFieldToDic("STATUS","YXBS");           //voExt.bindFieldToDic("USER_TYPE","CLYHLX");           //atx.setOutMsg(voExt.getRowXml(),"时间定义修改成功！");            atx.setOutMsg(vo.getRowXml(),"时间定义修改成功！");              LogManager.writeUserLog("","",Globals.OPERATION_TYPE_INSERT,LogManager.RESULT_SUCCESS              , "修改 [" + vo.getDefineId() + " 成功", user);       }           catch (Exception e)       {      atx.setException(e);      logger.error(e);      	LogManager.writeUserLog("", "", Globals.OPERATION_TYPE_INSERT,      	LogManager.RESULT_FAILURE, "时间定义失败：" + e.toString(),      user);       }       } /**   * @auther baixiaoliang   * 时间定义删除   * @return void  */    public void delete() throws Exception { 			RequestWrapper request = atx.getRequest();            String status = Pub.val(request, "status");            String defineId = Pub.val(request, "defineId");            try            {            if(DicConstant.YXBS_02.equals(status)){              dao.delete(defineId);              atx.setOutMsg("","时间定义额删除成功！");              }else{              atx.setOutMsg("","只有无效的才可以进行删除操作！");              }       }           catch (Exception e)       {      atx.setException(e);      logger.error(e);       }       } /**   * @auther baixiaoliang   * 时间定义查询   * @return void  */    public void search() throws Exception { 			RequestWrapper request = atx.getRequest();           User user = (User) atx.getSession().get(Globals.USER_KEY); 			PageManager page = new PageManager();           String conditions = RequestUtil.getConditionsWhere(request,page);            try            {         BaseResultSet bs = dao.search(page,user,conditions);         atx.setOutData("bs", bs);       }           catch (Exception e)       {      atx.setException(e);      logger.error(e);       }       } /**   * @auther baixiaoliang   * 时间定义删除   * @return void  */    public void resetStatus() throws Exception { 			RequestWrapper request = atx.getRequest(); 		User user = (User) atx.getSession().get(Globals.USER_KEY);            String status = Pub.val(request, "status");            String defineId = Pub.val(request, "defineId");            try            {            SeBaTimeDefineVO vo = new SeBaTimeDefineVO();             vo.setDefineId(defineId);             vo.setUpdateUser(user.getAccount());             	vo.setUpdateTime(Pub.getCurrentDate());            	vo.setStatus(status);             dao.update(vo);              atx.setOutMsg("","时间定义删除成功！");       }           catch (Exception e)       {      atx.setException(e);      logger.error(e);       }       }}
