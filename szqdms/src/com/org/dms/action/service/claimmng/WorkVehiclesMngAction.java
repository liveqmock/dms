package com.org.dms.action.service.claimmng;import com.org.dms.vo.service.SeBuWorkVehiclesVO;import com.org.dms.dao.service.claimmng.SeBuWorkVehiclesDao;import java.util.HashMap;import org.apache.log4j.Logger;import com.org.dms.common.DicConstant;import com.org.framework.Globals;import com.org.framework.common.User;import com.org.mvc.context.ActionContext;import com.org.framework.common.BaseResultSet;import com.org.framework.common.PageManager;import com.org.framework.util.Pub;import com.org.framework.util.RequestUtil;import com.org.mvc.context.RequestWrapper;import com.org.framework.log.LogManager;; /**   * 服务车辆   * <p>Company: szq</p>   * @author baixiaoliang   * @version 1.0  2014-7-14  */public class WorkVehiclesMngAction{	private Logger logger = com.org.framework.log.log.getLogger("WorkVehiclesMngAction");	private ActionContext atx = ActionContext.getContext();	private SeBuWorkVehiclesDao dao=SeBuWorkVehiclesDao.getInstance(atx);    	/**	 * @auther baixiaoliang	 * 服务车辆查询	 * @return void	 */    public void search() throws Exception {    	RequestWrapper request = atx.getRequest();        User user = (User) atx.getSession().get(Globals.USER_KEY);        PageManager page = new PageManager();        String conditions = RequestUtil.getConditionsWhere(request,page);        try        {        	BaseResultSet bs = dao.search(page,user,conditions);        	atx.setOutData("bs", bs);        }        catch (Exception e)        {        	atx.setException(e);        	logger.error(e);        }    }	 /**	   * @auther baixiaoliang	   * 服务车辆新增	   * @return void	  */    public void insert() throws Exception {    	RequestWrapper request = atx.getRequest();        User user = (User) atx.getSession().get(Globals.USER_KEY);        try{        	SeBuWorkVehiclesVO vo = new SeBuWorkVehiclesVO();            HashMap<String,String> hm;            hm = RequestUtil.getValues(request);            vo.setValue(hm);            vo.setCreateUser(user.getAccount());            vo.setCreateTime(Pub.getCurrentDate());            vo.setOrgId(user.getOrgId());            vo.setVehicleStatus(DicConstant.YXBS_01);            vo.setStatus(DicConstant.YXBS_01);            dao.insert(vo);            vo.bindFieldToDic("STATUS","YXBS");            vo.bindFieldToDic("VEHICLE_STATUS","YXBS");            atx.setOutMsg(vo.getRowXml(),"服务车辆新增成功！");       }       catch (Exception e)       {    	   atx.setException(e);    	   logger.error(e);       }    }	 /**	   * @auther baixiaoliang	   * 服务车辆新增	   * @return void	  */    public void update() throws Exception {    	RequestWrapper request = atx.getRequest();        User user = (User) atx.getSession().get(Globals.USER_KEY);        try{        	SeBuWorkVehiclesVO vo = new SeBuWorkVehiclesVO();            HashMap<String,String> hm;            hm = RequestUtil.getValues(request);            vo.setValue(hm);            vo.setUpdateUser(user.getAccount());            vo.setUpdateTime(Pub.getCurrentDate());            dao.update(vo);            vo.bindFieldToDic("STATUS","YXBS");            vo.bindFieldToDic("VEHICLE_STATUS","YXBS");            atx.setOutMsg(vo.getRowXml(),"服务车辆修改成功！");              /*LogManager.writeUserLog("","",Globals.OPERATION_TYPE_INSERT,LogManager.RESULT_SUCCESS              , "修改 [" + vo.getVehicleId() + " 成功", user);*/        }        catch (Exception e)        {        	atx.setException(e);        	logger.error(e);        	LogManager.writeUserLog("", "", Globals.OPERATION_TYPE_INSERT,        			LogManager.RESULT_FAILURE, "服务车辆失败：" + e.toString(),user);        }    }	 /**	   * @auther baixiaoliang	   * 服务车辆删除	   * @return void	  */    public void delete() throws Exception {    	RequestWrapper request = atx.getRequest();        String status = Pub.val(request, "status");        String vehicleId = Pub.val(request, "vehicleId");        try{        	if(DicConstant.YXBS_02.equals(status)){        		dao.delete(vehicleId);        		atx.setOutMsg("","服务车辆额删除成功！");        	}else{        		atx.setOutMsg("","只有无效的才可以进行删除操作！");        	}        }        catch (Exception e)        {        	atx.setException(e);        	logger.error(e);        }    } 	 /**	   * @auther baixiaoliang	   * 服务车辆删除	   * @return void	  */    public void resetStatus() throws Exception {    	RequestWrapper request = atx.getRequest(); 		User user = (User) atx.getSession().get(Globals.USER_KEY);        String status = Pub.val(request, "status");        String vehicleId = Pub.val(request, "vehicleId");        try{        	SeBuWorkVehiclesVO vo = new SeBuWorkVehiclesVO();            vo.setVehicleId(vehicleId);            vo.setUpdateUser(user.getAccount());            vo.setUpdateTime(Pub.getCurrentDate());            vo.setStatus(status);            dao.update(vo);            atx.setOutMsg("","服务车辆删除成功！");        }catch (Exception e)        {        	atx.setException(e);        	logger.error(e);        }    }}
