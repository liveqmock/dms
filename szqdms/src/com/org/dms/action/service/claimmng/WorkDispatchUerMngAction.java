package com.org.dms.action.service.claimmng;import com.org.dms.vo.service.SeBuWorkDispatchUerVO;import com.org.dms.dao.service.claimmng.SeBuWorkDispatchUerDao;import java.util.HashMap;import org.apache.log4j.Logger;import com.org.dms.common.DicConstant;import com.org.framework.Globals;import com.org.framework.common.User;import com.org.mvc.context.ActionContext;import com.org.framework.common.BaseResultSet;import com.org.framework.common.PageManager;import com.org.framework.util.Pub;import com.org.framework.util.RequestUtil;import com.org.mvc.context.RequestWrapper;import com.org.framework.log.LogManager;; /**   * 派工人员   * <p>Company: szq</p>   * @author baixiaoliang   * @version 1.0  2014-7-14  */public class WorkDispatchUerMngAction{	private Logger logger = com.org.framework.log.log.getLogger("WorkDispatchUerMngAction");	private ActionContext atx = ActionContext.getContext();    private SeBuWorkDispatchUerDao dao=SeBuWorkDispatchUerDao.getInstance(atx);         /**     * @auther baixiaoliang     * 派工人员查询     * @return void    */    public void search() throws Exception {    	RequestWrapper request = atx.getRequest();        User user = (User) atx.getSession().get(Globals.USER_KEY);   		PageManager page = new PageManager();        String conditions = RequestUtil.getConditionsWhere(request,page);        try{        	BaseResultSet bs = dao.search(page,user,conditions);        	atx.setOutData("bs", bs);        }catch (Exception e){        	atx.setException(e);        	logger.error(e);        }    }	 /**	   * @auther baixiaoliang	   * 派工人员新增	   * @return void	  */    public void insert() throws Exception {    	RequestWrapper request = atx.getRequest();        User user = (User) atx.getSession().get(Globals.USER_KEY);        try{    		SeBuWorkDispatchUerVO vo = new SeBuWorkDispatchUerVO();    		HashMap<String,String> hm;    		hm = RequestUtil.getValues(request);    		vo.setValue(hm);            vo.setCreateUser(user.getAccount());            vo.setCreateTime(Pub.getCurrentDate());            vo.setOrgId(user.getOrgId());            vo.setStatus(DicConstant.YXBS_01);            vo.setUserStatus(DicConstant.YXBS_01);            dao.insert(vo);            vo.bindFieldToDic("STATUS","YXBS");            vo.bindFieldToDic("USER_STATUS","YXBS");            atx.setOutMsg(vo.getRowXml(),"派工人员新增成功！");        }        catch (Exception e){        	atx.setException(e);        	logger.error(e);        }    }    /**	   * @auther baixiaoliang	   * 派工人员新增	   * @return void	  */    public void update() throws Exception {    	RequestWrapper request = atx.getRequest();    	User user = (User) atx.getSession().get(Globals.USER_KEY);    	try{            SeBuWorkDispatchUerVO vo = new SeBuWorkDispatchUerVO();            HashMap<String,String> hm;            hm = RequestUtil.getValues(request);            vo.setValue(hm);            vo.setUpdateUser(user.getAccount());            vo.setUpdateTime(Pub.getCurrentDate());            dao.update(vo);            vo.bindFieldToDic("STATUS","YXBS");            vo.bindFieldToDic("USER_STATUS","YXBS");            atx.setOutMsg(vo.getRowXml(),"派工人员修改成功！");              /*LogManager.writeUserLog("","",Globals.OPERATION_TYPE_INSERT,LogManager.RESULT_SUCCESS              , "修改 [" + vo.getUserId() + " 成功", user);*/       }       catch (Exception e){    	   atx.setException(e);    	   logger.error(e);    	   LogManager.writeUserLog("", "", Globals.OPERATION_TYPE_INSERT,    	   LogManager.RESULT_FAILURE, "派工人员失败：" + e.toString(),user);       }    }	 /**	   * @auther baixiaoliang	   * 派工人员删除	   * @return void	  */    public void delete() throws Exception {    	RequestWrapper request = atx.getRequest();    	String status = Pub.val(request, "status");    	String userId = Pub.val(request, "userId");        try{        	if(DicConstant.YXBS_02.equals(status)){        		dao.delete(userId);        		atx.setOutMsg("","派工人员额删除成功！");        	}else{        		atx.setOutMsg("","只有无效的才可以进行删除操作！");        	}        }catch (Exception e){        	atx.setException(e);        	logger.error(e);        }    } 	 /**	   * @auther baixiaoliang	   * 派工人员删除	   * @return void	  */    public void resetStatus() throws Exception {    	RequestWrapper request = atx.getRequest(); 		User user = (User) atx.getSession().get(Globals.USER_KEY);        String status = Pub.val(request, "status");        String userId = Pub.val(request, "userId");        try{        	SeBuWorkDispatchUerVO vo = new SeBuWorkDispatchUerVO();            vo.setUserId(userId);            vo.setUpdateUser(user.getAccount());            vo.setUpdateTime(Pub.getCurrentDate());            vo.setStatus(status);            dao.update(vo);            atx.setOutMsg("","派工人员删除成功！");        }catch (Exception e){        	atx.setException(e);        	logger.error(e);        }    }}
